/*
 * This file is generated by jOOQ.
 */
package io.github.dndanoff.door.db.tables;


import io.github.dndanoff.door.db.DoorMonitor;
import io.github.dndanoff.door.db.Indexes;
import io.github.dndanoff.door.db.Keys;
import io.github.dndanoff.door.db.tables.records.DoorStateTransitionRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DoorStateTransition extends TableImpl<DoorStateTransitionRecord> {

    private static final long serialVersionUID = -1355810620;

    /**
     * The reference instance of <code>door_monitor.DOOR_STATE_TRANSITION</code>
     */
    public static final DoorStateTransition DOOR_STATE_TRANSITION = new DoorStateTransition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DoorStateTransitionRecord> getRecordType() {
        return DoorStateTransitionRecord.class;
    }

    /**
     * The column <code>door_monitor.DOOR_STATE_TRANSITION.ID</code>.
     */
    public final TableField<DoorStateTransitionRecord, String> ID = createField("ID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>door_monitor.DOOR_STATE_TRANSITION.DOOR_ID</code>.
     */
    public final TableField<DoorStateTransitionRecord, String> DOOR_ID = createField("DOOR_ID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>door_monitor.DOOR_STATE_TRANSITION.VALUE</code>.
     */
    public final TableField<DoorStateTransitionRecord, Byte> VALUE = createField("VALUE", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>door_monitor.DOOR_STATE_TRANSITION.ACTIVE</code>.
     */
    public final TableField<DoorStateTransitionRecord, Byte> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>door_monitor.DOOR_STATE_TRANSITION.CREATE_TIME</code>.
     */
    public final TableField<DoorStateTransitionRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>door_monitor.DOOR_STATE_TRANSITION</code> table reference
     */
    public DoorStateTransition() {
        this(DSL.name("DOOR_STATE_TRANSITION"), null);
    }

    /**
     * Create an aliased <code>door_monitor.DOOR_STATE_TRANSITION</code> table reference
     */
    public DoorStateTransition(String alias) {
        this(DSL.name(alias), DOOR_STATE_TRANSITION);
    }

    /**
     * Create an aliased <code>door_monitor.DOOR_STATE_TRANSITION</code> table reference
     */
    public DoorStateTransition(Name alias) {
        this(alias, DOOR_STATE_TRANSITION);
    }

    private DoorStateTransition(Name alias, Table<DoorStateTransitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private DoorStateTransition(Name alias, Table<DoorStateTransitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DoorStateTransition(Table<O> child, ForeignKey<O, DoorStateTransitionRecord> key) {
        super(child, key, DOOR_STATE_TRANSITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DoorMonitor.DOOR_MONITOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_7, Indexes.DOOR_STATE_TRANSITION_ACTIVE_INDX, Indexes.DOOR_STATE_TRANSITION_CREATE_TIME_INDX, Indexes.PRIMARY_KEY_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DoorStateTransitionRecord> getPrimaryKey() {
        return Keys.DOOR_STATE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DoorStateTransitionRecord>> getKeys() {
        return Arrays.<UniqueKey<DoorStateTransitionRecord>>asList(Keys.DOOR_STATE_PK, Keys.CONSTRAINT_7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoorStateTransition as(String alias) {
        return new DoorStateTransition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DoorStateTransition as(Name alias) {
        return new DoorStateTransition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DoorStateTransition rename(String name) {
        return new DoorStateTransition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DoorStateTransition rename(Name name) {
        return new DoorStateTransition(name, null);
    }
}
